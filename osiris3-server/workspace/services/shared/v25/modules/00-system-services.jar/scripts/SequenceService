
import com.rameses.annotations.*;
import java.text.DecimalFormat;

class SequenceService 
{
	@ActiveDB(value='sequence', em='system')
	def sequence;

	def FORMATTED_LEN = 5;
	
	@ProxyMethod(local=true)
	public def getCurrentSeries( objid )  {
		def data = sequence.findSeries([objid: objid]);
		if (data == null) {	
			data = 	[objid: objid, nextseries:1];
			sequence.create(data); 
		} 
		return data.nextseries;
	}
	
    @ProxyMethod(local=true)
	public def getNextFormattedSeries( objid ) {
		return getNextFormattedSeriesA( objid, FORMATTED_LEN ) ;
	}
	
	@ProxyMethod(local=true)
	public def getNextFormattedSeriesA( objid, len ) {
		def nextSeries = getNextSeries( objid );
		return "$nextSeries".padLeft(len, '0')
	}
	
	@ProxyMethod(local=true)
	public def getNextSeries( objid ) {
		def data = sequence.findSeries([objid: objid]);
		if (data == null) {	
			data = 	[objid: objid, nextseries:1];
			sequence.create(data); 
		} 

		def nextseries = data.nextseries;
		sequence.update([objid: objid, nextseries: nextseries+1]);
		return nextseries;
	}
	
	@ProxyMethod(local=true)
	public def create( objid ) {
		def data = sequence.findSeries([objid: objid]);
		if (data == null) {
			data = 	[objid: objid, nextseries:1];
			sequence.create(data); 
		}
		return data; 
	}
	
	@ProxyMethod(local=true)
	public void updateNextSeries( objid, nextseries ) {
		def data = sequence.findSeries([objid: objid]);
		data.nextseries = nextseries; 
		sequence.update(data); 
	}
	
}
