<workunit>
    <invokers>
        <invoker type="quick_launcher" code="NEW_LOAN" action="initOnline" caption="New Application"/>
        <invoker type="quick_launcher" code="CAP_LOAN" action="initCapture" caption="Capture Renewal"/>
    </invokers>
    <code>
        <![CDATA[
            import com.rameses.rcp.common.*;
            import com.rameses.rcp.annotations.*;
            import com.rameses.osiris2.client.*;
            import com.rameses.osiris2.common.*;
            
            class ApplicationController extends CRUDController
            {
                String serviceName = 'LoanApplicationService'
                String prefixId = 'LOANAPP'
                def principalBorrowerLookup; 
                def clientTypes = LOV.LOAN_CLIENT_TYPES
                def productTypes = LOV.LOAN_PROD_TYPES
                def renewalTypes = LOV.LOAN_RENEWAL_TYPES
                def appmode
                def borrower
                
                def getCustomerLookupHandler() {
                    return InvokerUtil.lookupOpener('customer:lookup', [:]); 
                } 
                
                void setBorrower( borrower ) {
                    this.borrower = borrower
                    entity.borrower = borrower
                }
                
                Map createEntity() {
                    return [ previousloans: [], term: 120 ]
                }
                
                def initOnline() {
                    appmode = 'ONLINE'
                    init()
                }
                
                def initCapture() {
                    appmode = 'CAPTURE'
                    init()
                }
                
                protected void beforeSave(Object data) {
                    println 'before save-> '+data
                }
                
                def previousLoansHandler = [
                    fetchList: {o->
                        return entity.previousloans
                    },
                    onAddItem: {o->
                        entity.previousloans.add(o)
                    },
                    onRemoveItem: {o->
                        if( MsgBox.confirm("You are about to remove this loan. Continue?") ) {
                            entity.previousloans.remove(o)
                            return true
                        }
                        return false
                    },
                    onColumnUpdate: {o, colName->
                        def item = entity.previousloans.find{ it == o }
                        if( item ) item = o
                    }
                ] as EditorListModel
            }
        ]]>
    </code>
    <pages>
        <page template="com.rameses.clfc.loan.ApplicationPage"/>
    </pages>
</workunit>