<workunit extends="workunits/templateform.xml"> 
    <invokers>
        <invoker folderid="/menu/transaction" caption="Sample Form"/>
        <invoker folderid="/master/test" caption="Sample Form"/>
        
        <invoker type="formActions" caption="State=0" action="state0"/>
        <invoker type="formActions" caption="State=1" action="state1"/>
        <invoker type="formActions" caption="State=null" action="stateNull"/>
        
        <invoker type="formActions" caption="Print" action="print"/>
        <invoker type="formActions" caption="Report" action="viewReport"/>
    </invokers>
    
    <code>
    import com.rameses.rcp.common.*;
    import com.rameses.rcp.annotations.*;
    import com.rameses.osiris2.client.*;
    import com.rameses.osiris2.common.*;

    class SampleFormController implements ViewHandler
    {        
        @Binding
        def binding;
        
        def entity = [:];
        
        void doSearch() {
            MsgBox.alert("invoking doSearch " + entity);
        } 
        
        def showPage2() { 
            return new Opener(outcome:'page2');
        }    
        
        def showDefaultPage() {
            return new Opener(outcome:'default'); 
        } 
        
        void activatePage(binding, pagename) {
            println 'activatePage: binding->'+binding + ', pagename->'+pagename;
        } 
        
        void afterRefresh(binding, pagename) { 
            println 'afterRefresh: binding->'+binding + ', pagename->'+pagename;    
            if (pagename == 'page2') binding.requestFocus('entity.text2'); 
        } 
        
        def state0() {
            if (true) throw new com.rameses.util.BreakException();
            
            entity.state = 0;
            return Inv.lookupOpener('var:lookup', [:]); 
        } 
        void state1() {
            entity.state = 1;
            if (true) throw new Exception('error...');
        } 
        void stateNull() {
            entity.state = null;
        }      
        
        def photo;
        void refreshPhoto() {
            binding.refresh('photo'); 
        } 
        
        def cameraHandler1 = {o-> 
            photo = o; 
            binding.refresh('photo'); 
        } 
        
        def cameraHandler = [            
            onselect: {bytes-> 
                photo = bytes;
                println 'select-> ' + bytes;
                binding.refresh('photo'); 
            }, 
            
            onclose: {
                println 'closing camera session'; 
            } 
        ] as CameraModel 
        
        def fingerPrintHandler = [
            onselect: {bytes-> 
                photo = bytes;
                binding.refresh('photo'); 
            }
        ] as FingerPrintModel
        
        
        def actionFieldHandler = [
        
            invoke: {info-> 
                return Inv.lookupOpener('basiclist:open', [:]);
            } 
            
        ] as ActionFieldModel 
    }
    </code>
    
    <pages>
        <page template="test.form.SamplePage"/> 
        <page template="test.form.SamplePage2" name="page2"/> 
    </pages>
</workunit>
