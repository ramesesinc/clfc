import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class LoanLedgerService 
{	
	@ActiveDB(value='loan_ledger')
	def ledger;

	@ProxyMethod 
	public def create(data) { 
		println 'create-> ' + data; 

		def loancount = ledger.findLoanCountByAcctid([acctid: data.acctid]).loancount; 
		data.loancount = loancount+1;
		data.totalprincipal = data.loanamount; 

		dailydue:  		(data.loanamount*1.2)/data.term;
		interestamount: (to be computed) 
		overduepenalty: (to be computed) 
		absentpenalty:  (to be computed) 
		totaldue: 		(to be computed) 
		compromiseid:   (to be set if has comprise agreement) 
	} 

}
