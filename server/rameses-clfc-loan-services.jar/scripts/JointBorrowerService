import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class JointBorrowerService 
{	
	@ActiveDB(value='loanapp')
	def loanapp;

	@ActiveDB(value='loanapp_borrower')
	def loanapp_borrower; 

	@Service('BorrowerService')
	def borrowerService; 	

	@ProxyMethod 
	public def open( params ) {
		if (!params.objid) throw new Exception('Please specify objid'); 

		def data = loanapp.findByObjid(params);
		if (!data) throw new Exception('\''+params.objid+'\' loan application record not found'); 

		data.borrowers = loanapp_borrower.getJointBorrowers([parentid: data.objid]); 
		return data; 
	} 

	@ProxyMethod 
	public def update ( params ) {
		if (!params.objid) throw new Exception('Please specify objid'); 

		def data = loanapp.findByObjid(params);
		if (!data) throw new Exception('\''+params.objid+'\' loan application record not found'); 

		data.borrowers = params.remove('borrowers'); 
		if (data.borrowers == null) data.borrowers = [];

		loanapp_borrower.removeJointBorrowers([parentid: data.objid]); 

		for (o in data.borrowers) { 
			borrowerService.update(o); 

			def lb = [
				objid: 			'LBRWR' + new UID(), 
				parentid: 		data.objid, 
				borrowerid: 	o.objid, 
				principalid: 	data.borrower.objid, 
				relaterid: 		o.objid, 
				type: 			'JOINT', 
				relation: 		o.relation  
			];
			loanapp_borrower.create(lb); 
		} 
		return data; 
	} 
}