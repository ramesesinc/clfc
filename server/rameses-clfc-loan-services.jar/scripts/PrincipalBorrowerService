import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class PrincipalBorrowerService 
{	
	@ActiveDB(value='loanapp_borrower')
	def loanapp_borrower; 

	@Service('LoanAppService')
	def loanAppService; 	

	@Service('BorrowerService')
	def borrowerService; 	

	@ProxyMethod 
	public def open( params ) {
		if (!params.objid) throw new Exception('Please specify objid'); 

		def data = loanAppService.findByObjid(params);
		if (!data) throw new Exception('\''+params.objid+'\' loan application record not found'); 

		data.borrower = openBorrower([objid: data.borrower.objid]); 
		return data; 
	} 

	@ProxyMethod 
	public def openBorrower( params ) {
		return borrowerService.open(params);  
	}

	@ProxyMethod 
	public def update ( params ) {
		if (!params.objid) throw new Exception('Please specify objid'); 

		def data = loanAppService.findByObjid(params);
		if (!data) throw new Exception('\''+params.objid+'\' loan application record not found'); 

		def borrower = params.remove('borrower'); 
		data.borrower.objid = borrower.objid;
		data.borrower.name = borrowerService.createFullName(borrower.lastname, borrower.firstname, borrower.middlename);
		loanAppService.em.update(data); 
		borrowerService.update(borrower); 
		loanapp_borrower.removePrincipalBorrower([parentid: data.objid]); 

		def lb = [
			objid: 		  'LBRWR' + new UID(), 
			parentid: 	  data.objid, 
			borrowerid:   borrower.objid, 
			borrowername: borrower.name,  
			principalid:  borrower.objid, 
			type: 		  'PRINCIPAL' 
		];	
		loanapp_borrower.create(lb); 

		def list = loanapp_borrower.getBorrowerNames([parentid: data.objid]); 
		for (o in list) {
			o.borrowerid = o.objid; 
			o.borrowertype = o.type; 			
			o.borrowername = borrowerService.createFullName(o.lastname, o.firstname, o.middlename); 
		}
		loanAppService.updateBorrowerIndices(data.objid, list);  
		data.borrower = borrower;
		return data; 
	} 
}
