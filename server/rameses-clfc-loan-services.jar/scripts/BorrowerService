import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class BorrowerService 
{	
	@ActiveDB(value='borrower') 
	def em;


	@ProxyMethod 
	public def open( data ) {
		def o = em.read(data); 
		if (o == null) throw new Exception('borrower record not found');

		o.children = em.getChildren([borrowerid: o.objid]); 
		return o;
	}

	@ProxyMethod 
	public def update( data ) {
		def o = em.findByObjid([objid: data.objid]); 
		if (o == null) {
			em.create(data); 
		} else {
			em.update(data);
		}

		em.removeChildren([objid: data.objid]); 
		data.children?.each {
			it.objid = 'BCH' + new UID(); 
			it.borrowerid = data.objid; 
			em.create(it, 'children'); 
		}
	}
}
