import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class LoanAppSearchService 
{	
	@ActiveDB(value='loanapp_search_index')
	def em;

	@ProxyMethod 
	public List getColumns( params ) {
		return [
			[name:'appno', caption:'App No.'],
			[name:'dtcreated', caption:'Date Applied'],
			[name:'fullborrowername', caption:'Borrower Name'],
			[name:'loanamount', caption:'Applied Amount'] 
		];
	}

	def searchTypes = [
		[filter:' bi.borrowername LIKE $P{searchtext} AND ', orderby:' si.fullborrowername '], 
		[filter:' bi.loanappno LIKE $P{searchtext} AND ', orderby:' si.appno '] 
	];

	@ProxyMethod 
	public List getList( params ) { 
		params.searchtext = (params.searchtext? params.searchtext: '')+'%'; 
		params.state = (params.state? param.state: params._tag);		
		for (o in searchTypes) {
			params.putAll(o); 
			def list = em.getList(params);
			if (!list.isEmpty()) return list;  
		} 
		return [];
	}

}
