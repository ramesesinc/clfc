import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class LoanAppService extends ActiveCrudService 
{	
	@ActiveDB(value='loanapp')
	def em;

	@ActiveDB(value='loanapp_borrower')
	def lab;

	@ActiveDB(value='borrower')
	def borrower;

	@Service('DateService')
	def dtSvc

	void beforeCreate(data) {
		data.dtcreated = dtSvc.serverDate.toString()
	}

	void afterCreate(data) {
		rebuildBorrower(data); 
	}

	void afterUpdate(data) {
		lab.removeItems([parentid: data.objid]);
		rebuildBorrower(data); 
	} 

	void rebuildBorrower(data) {
		def o = borrower.findByObjid([objid: data.borrower.objid]);
		if (o == null) {
			o = [objid: data.borrower.objid, info:data.borrower];
			borrower.create(o, 'borrower-info'); 
		} 

		o = [
			objid: 			'LAB'+new UID(), 
			parentid: 		data.objid, 
			principalid: 	data.borrower.objid,
			type:  			'principal'
		];
		lab.create(o); 		
	}
}
