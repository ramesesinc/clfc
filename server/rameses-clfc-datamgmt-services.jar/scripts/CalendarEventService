import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class CalendarEventService extends ActiveCrudListService 
{	
	@ActiveDB(value='calendar_event')
	def em;

	@Service('DateService')
	def dateSvc;
	
	@ProxyMethod 
	public List getColumns( params ) {
		return [
			[name:'date', caption:'Date', type:'date', width:80, maxWidth:80, outputFormat:'MMM-dd-yyyy'],
			[name:'name', caption:'Name'],
			[name:'description', caption:'Description'],
			//spacer
			[name:null, caption:''] 
		];
	}

	public void beforeList(params) {
		params.searchtext = (params.searchtext? params.searchtext: '')+'%';		
	}

	public void beforeCreate(data) {
		data.dtcreated = dateSvc.serverDate.toString();
	}

	@ProxyMethod
	public def getNoOfHolidays( params ) {
		if (!params.lastscheduledate) throw new Exception('Please specify last schedule date')
		if (!params.item) throw new Exception('Please specify item')

		def enddate = dateSvc.add(params.lastscheduledate, params.item.totalDays+"");
		def list = em.getListBetweenStartdateAndEnddate([startdate: params.lastscheduledate, enddate: enddate]);
		list.unique{ it.date }
		def noofholidays = list.size();
		def hasSunday = (params.item.hasSunday == "true")? true : false;
		Calendar cal = Calendar.getInstance();
		if (params.item.trialAndError == 0) {
			list.each{
				cal.setTime(it.date);
				def day = cal.get(Calendar.DAY_OF_WEEK);
				if(day == 1 && hasSunday == true) {
					noofholidays--;
					hasSunday = false;
				}
			}
		}
		return noofholidays;
	}
}
